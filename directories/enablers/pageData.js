var types = [
    'API Management',
    'Core Context',
    'Data Monetization',
    'Data Publication',
    'IoT Agents',
    'Media Streams',
    'Processing',
    'Robotics',
    'Security',
    'Third Party',
    'Visualisation'
];
var domains = [
    'Big Data',
    'Cloud-Edge',
    'Context Broker',
    'Data Connector',
    'Data Exchange',
    'Data Persistence',
    'Data Spaces',
    'Event Processing',
    'Identity Manager',
    'IoT Devices',
    'Mashup',
    'Media Server',
    'NGSI-LD',
    'NGSI-v2',
    'PDP',
    'PEP Proxy',
    'Short Term History',
    'Trust',
    'Verified Credentials',
    'Video Filters'
];
var technologies = [
    'AMPQ',
    'Apache Flink',
    'Apache Spark',
    'Arcgis',
    'Blockchain',
    'Carto',
    'Cassandra',
    'CKAN',
    'CoAP',
    'CrateDB',
    'DDS',
    'DKAN',
    'DynamoDB',
    'eDelivery',
    'Elasticsearch',
    'eMail',
    'EPCIS',
    'HDFS',
    'HTTP',
    'IDS',
    'Kafka',
    'Keycloak',
    'Keyrock',
    'Keystone',
    'LoRa',
    'LWM2M',
    'MongoDB',
    'MQTT',
    'MySQL',
    'Node.js',
    'OneM2M',
    'OPC-UA',
    'PostgreSQL',
    'PySpark',
    'ROS',
    'ROS2',
    'SigFox',
    'SMS',
    'SOCRATA',
    'Timescale',
    'WebRTC',
    'XACML'
];

var modalData = [
    {
        name: 'Core Context Management',
        chapter: 'core',
        badge: "<img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'>",
        content:
            "<div class='bullets'><p>This chapter contains:</p><ul><li class='bullet'>Context Brokers</li><li class='bullet'>Data Connectors</li></ul></div><p>A Context Broker component is the core and mandatory component of any “Powered by FIWARE” platform or solution. It enables to manage context information in a highly decentralised and large-scale manner. A wide variety of Data Connectors are also available.</p>"
    },
    {
        name: 'Interface with IoT, Robots and Third-Party Systems',
        chapter: 'interface',
        badge: "<img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_IOTAgents.svg'><img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_MediaStreams.svg'><img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Robotics.svg'><img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_ThirdParty.svg'>",
        content:
            "<div class='bullets'><p>This chapter offers:</p><ul><li class='bullet'>Maintainance of interoperable Sensors and Actuators</li><li class='bullet'>Linking Robotic goals and sensors as context data</li><li class='bullet'>Retrieving context data from Cameras</li><li class='bullet'>Pushing Context Data to event based systems</li></ul></div><p>A number of Generic Enablers are available making it easier to interface with the Internet of Things, Robots and Third-party systems for the purpose of gathering valuable context information or trigger actuations in response to context updates.</p>"
    },
    {
        name: 'Context Processing, Analysis and Visualisation',
        chapter: 'context-processing',
        badge: "<img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_ProcessingAnalysis.svg'><img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Visualization.svg'>",
        content:
            "<div class='bullets'><p>This chapter contains:</p> <ul> <li class='bullet'>Decision making and Inference from Context</li><li class='bullet'>Graphs, Dashboards and Business Intellegence</li></ul></div><p>A number of Generic Enablers are available making it easier to process, analyze or visualize context information for the purpose of implementing the feedback loop expected in any “smart” application.</p>"
    },
    {
        name: 'Context Data/API Management, Publication and Monetization',
        chapter: 'context-data',
        badge: "<img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_APIManagement.svg'><img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_DataMonetization.svg'><img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_DataPublication.svg'><img decoding='async' class='cat-logo' src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'>",
        content:
            "<div class='bullets'><p>This chapter contains:</p><ul><li class='bullet'>Maintaining interoperable Sensors and Actuators</li><li class='bullet'>Linking Robotic goals and sensors as context data</li><li class='bullet'>Retrieving context data from Cameras</li><li class='bullet'>Pushing Context Data to event based systems</li></ul></div><p>Context data resources can be published in common data formats or a fee charged for access. You should secure access to services within a “Powered by FIWARE” architecture by using Security components.</p>"
    },
    {
        name: 'Deployment Tools',
        chapter: 'deployment-tools',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_DeploymentTools.svg'/>",
        content:
            "<div class='bullets'><p>This chapter covers:</p> <ul><li class='bullet'>Deploying FIWARE Systems at scale</li><li class='bullet'>Container Images of FIWARE Components</li></ul></div><p>FIWARE components can be deployed using standard containerisation techniques. Most components are directly available as Docker Images. For proper scalable solutions, Helm Charts also are available.</p>"
    },
    {
        name: 'Orion',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/telefonica.png',
        company: 'Telefónica',
        companyType: 'S.A.',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/github/license/telefonicaid/fiware-orion.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/telefonicaid/fiware-orion.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/telefonicaid/fiware-orion/latest.svg' alt='' /></p> <h4 id='whatisorion'>What is Orion?</h4> <p>The Orion Context Broker is an implementation of the Publish/Subscribe Context Broker GE, providing the NGSI interfaces. Using these interfaces, clients can do several operations:</p> <ul> <li>Register context producer applications, e.g. a temperature sensor within a room</li> <li>Update context information, e.g. send updates of temperature</li> <li>Being notified when changes on context information take place (e.g. the temperature has changed) or with a given frequency (e.g. get the temperature each minute)</li> <li>Query context information. The Orion Context Broker stores context information updated from applications, so queries are resolved based on that information.</li> </ul> <h4 id='whyuseorion'>Why Use Orion?</h4> <p>If you are developing a Data/Context scenario, a broker like the Orion Context Broker is a must. You would need a component in the architecture able to mediate between consumer producers (e.g. sensors) and the context consumer applications (e.g. an mobile phone applications taking advantage of the context information provided by the sensors). The Orion Context Broker fulfils this functionality in your architecture.</p> <p>Orion is an implementation of the FIWARE Publish/Subscribe Context Broker Generic Enabler. More specifically, Orion implements the following API and Open Specification:</p> <ul> <li><a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI-v2</a></li> </ul> <p>For context data management, NGSI and the Orion context broker have been accepted as standards or recommendations by a variety of independent standards bodies, for example, GSMA recommends NSGI as a standard for relevant parts of their <a href='https://www.gsma.com/iot/wp-content/uploads/2016/11/CLP.25-v1.0.pdf'>IoT Big Data architecture</a> and promotes the Orion Context Broker as the primary example of the standard and NGSI specification has been selected by the European Commission as a <a href='https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/Context+Broker'>CEF Building Block</a> for the implementation of new smart applications and Public Administration.</p> <p>The use of the Orion context broker is mandatory for any <a href='https://marketplace.fiware.org/pages/platforms'>platform</a> or <a href='https://marketplace.fiware.org/pages/solutions'>solution</a> to be labelled as “Powered by FIWARE” within the <a href='https://marketplace.fiware.org/'>FIWARE marketplace</a></p>",
        domain: 'Context Broker,NGSI-v2',
        technology: 'HTTP',
        status: 'Full',
        gitHub: 'https://github.com/telefonicaid/fiware-orion/',
        gitHubOrg: 'https://github.com/telefonicaid/',
        docker: 'https://quay.io/repository/fiware/orion',
        documentation: 'https://fiware-orion.rtfd.io/',
        status: 'Full'
    },
    {
        name: 'Orion-LD',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'FIWARE Foundation',
        companyType: 'e.V.',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/github/license/FIWARE/context.Orion-LD.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/FIWARE/context.Orion-LD.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/FIWARE/context.Orion-LD/latest.svg' alt='' /></p> <h4 id='whatisorionld'>What is Orion-LD?</h4> <p>Orion-LD is an alternative NGSI-LD Context Broker written in C/C++. It is a standalone executable and therefore small, fast, lightweight and easy to handle. Context brokers allow for the management and requesting context of information in a structured manner based on linked data standards following the NGSI-LD specification. Orion-LD is more suitable for smaller installations or possibly in embedded environments - it currently supports only a subset of the standard NGSI-LD endpoints.</p> <h4 id='whyuseorionld'>Why Use Orion-LD?</h4> <p>Orion-LD implements the NGSI-LD linked data interface, which is the evolution of NGSI-v2 and previous versions going back to the OMA NGSI context interfaces. This standardized version is based on the NGSI-LD specification published by the ETSI Industry Specification Group on Context Information Management.</p> <p>NGSI-LD has a number of new features compared to NGSI-v2. NGSI-LD distinguishes properties and relationships instead of only having attributes. While properties have values, relationships explicitly refer to other entities. The result is an explicit entity graph, as specialized knowledge graph. Relationships can be followed to find relevant related entities. NGSI-LD is based on JSON-LD, where LD stands for linked data. As required in JSON-LD, NGSI-LD uses entity types, relationships and properties defined as unique URIs. The representation of the data is still concise as shortname strings can be used, the mapping to URIs is done in an <code>@context</code> element that can be part of the JSON or be referenced as a header. As JSON-LD is a serialization of RDF, NGSI-LD provides a semantic grounding and can be used with semantic tools and combined with other information.</p>",
        domain: 'Context Broker,NGSI-LD',
        technology: 'HTTP',
        status: 'Full',
        gitHub: 'https://github.com/FIWARE/context.Orion-LD',
        gitHubOrg: 'https://github.com/FIWARE/',
        docker: 'https://quay.io/repository/fiware/orion-ld',
        documentation: 'https://github.com/FIWARE/context.Orion-LD/tree/develop/doc/manuals-ld',
        status: 'Full'
    },
    {
        name: 'Scorpio',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/nec.png',
        company: 'NEC',
        companyType: 'Corporation',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/badge/license-BSD--4--clause-green' alt='License' /> <img src='https://img.shields.io/github/release-date/ScorpioBroker/ScorpioBroker.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/ScorpioBroker/ScorpioBroker/latest.svg' alt='' /></p> <h4 id='whatisscorpio'>What is Scorpio?</h4> <p>Scorpio is an NGSI-LD Broker that allows managing and requesting context information. Context Producers can manage their context – creating, updating, appending and deleting context information. Context Consumers can request the context information they require, either identifying the entity or discover relevant entities by providing the entity type, possibly filtering according to property value, existing relationship and/or geographic scope provided as a GeoJSON feature.</p> <p>Two interaction styles are supported, a synchronous query-response, and an asynchronous subscribe / notify, where notifications can be based on a change in property or relationship, or on a fixed time interval. In addition to the regular context interface that provides the most current properties and relationships for each entity, Scorpio implements NGSI-LD’s optional temporal interface for requesting historic information, e.g. the property values measured within a specified time interval.</p> <p>Scorpio supports multiple deployment configurations including centralized, distributed and federated ones. In addition to the Context Producers mentioned above, there can be Context Sources that themselves implement the NGSI-LD interface. These Context Sources can register themselves with the information they can provide on request (not the information (values) itself).</p> <p>A Scorpio Broker in a distributed setting can then discover the Context Sources that may have information for answering a request based on their registrations, request and aggregate the information from different Context Sources and provide it to the requesting Context Consumer. In a federated setting the Context Source can itself be an NGSI-LD Broker. Federations can be used to combine information from multiple providers that want to (partially) share information. An important difference is then typically in the granularity of the registration, e.g. “I have information about entities of entity type building within a geographic area”, instead of “I have information about Building X”</p> <h4 id='whyusescorpio'>Why Use Scorpio?</h4> <p>Scorpio implements NGSI-LD, which is the evolution of NGSI-v2 and previous versions going back to the OMA NGSI context interfaces. This standardized version is based on the NGSI-LD specification published by the ETSI Industry Specification Group on Context Information Management.</p> <p>NGSI-LD has a number of new features compared to NGSI-v2. NGSI-LD distinguishes properties and relationships instead of only having attributes. While properties have values, relationships explicitly refer to other entities. The result is an explicit entity graph, as specialized knowledge graph. Relationships can be followed to find relevant related entities. NGSI-LD is based on JSON-LD, where LD stands for linked data. As required in JSON-LD, NGSI-LD uses entity types, relationships and properties defined as unique URIs. The representation of the data is still concise as shortname strings can be used, the mapping to URIs is done in an <code>@context</code> element that can be part of the JSON or be referenced as a header. As JSON-LD is a serialization of RDF, NGSI-LD provides a semantic grounding and can be used with semantic tools and combined with other information.</p> <p>Scorpio supports different deployment configurations, which support scalability and extension of scenarios in an evolutionary way. For example two separate deployments can be combined or for scalability reasons different brokers can be used – completely transparent to Context Consumers that can still use a single point of access. Scorpio also implements the optional temporal NGSI-LD interface, so any updated context information can automatically be made available as history information through the temporal interface.</p>",
        domain: 'Context Broker,NGSI-LD',
        technology: 'HTTP',
        status: 'Full',
        gitHub: 'https://github.com/ScorpioBroker/ScorpioBroker',
        gitHubOrg: 'https://github.com/ScorpioBroker',
        docker: 'https://cloud.docker.com/u/scorpiobroker/',
        documentation: 'https://scorpio.rtfd.io/',
        status: 'Full'
    },
    {
        name: 'Stellio',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'EGM',
        companyType: '',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/github/license/stellio-hub/stellio-context-broker.svg' alt='License' /> <img src='https://img.shields.io/github/last-commit/stellio-hub/stellio-context-broker.svg' alt='' /> <img src='https://img.shields.io/github/tag/stellio-hub/stellio-context-broker.svg' alt='' /></p> <h4 id='whatisstellio'>What is Stellio?</h4> <p>Stellio is a NGSI-LD context broker implementing the API specification published by the ETSI Industry Specification Group for Context Information Management (ISG CIM). Context information means any piece of data which is contextualized in time, space and in relation to other data through linked data principles.</p> <p>Stellio is built around a Kafka message broker for improved extensibility, scalability and decoupling of services. These services embed a graph database (Neo4J) for context management as well as a timeseries (TimescaleDB) and geospatial (PostGIS) database to manage temporal and geospatial properties.</p> <p>Stellio is developed in Kotlin and lays on the Spring Boot and Spring Cloud frameworks. It is based on a micro-services architecture and follows the reactive and functional paradigms.</p> <p>Stellio acts as a central broker. It currently supports major operations on context information, subscriptions and temporal queries and targets full compliance with the NGSI-LD specification by the end of 2020. It does not aim to support NGSIv1 and NGSIv2 specifications.</p> <h4 id='whyusestellio'>Why use Stellio?</h4> <p>In order to take the full benefit of the linked data nature of the NGSI-LD data model, Stellio uses the Neo4J labelled property graph database for the storage of the context information. Beside benefiting from Neo4J capabilities to efficiently handle graph data, this provides the underlying structure to perform syntactic and semantic validation of data, and opens up the door to exploit and analyze the graph with graph driven data science algorithms.</p> <p>In addition, Stellio includes the support of the NGSI-LD API for querying the temporal evolution of entities, as long as the interface for performing geospatial queries. The included TimescaleDB and PostGIS extensions of the well-known PostgreSQL database allow efficient queries while allowing off-the-shelves storing of large volumes of historical data.</p>",
        domain: 'Context Broker,NGSI-LD',
        technology: 'HTTP',
        status: 'Full',
        gitHub: 'https://github.com/stellio-hub/stellio-context-broker',
        gitHubOrg: 'https://github.com/stellio-hub',
        docker: 'https://hub.docker.com/orgs/stellio/repositories/',
        documentation: 'https://stellio.rtfd.io/',
        status: 'Full'
    },
    {
        name: 'NGSI-JS',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/ficodes.png',
        company: 'FICODES',
        companyType: '',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/github/license/ficodes/ngsijs.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/ficodes/ngsijs.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/ficodes/ngsijs/latest.svg' alt='' /></p> <h4 id='whatisngsijs'>What is NGSI.js?</h4> <p>NGSI.js is the JavaScript library used by WireCloud for adding FIWARE NGSI capabilities to widgets and operators. However, this library has also been designed to be used in other environments as normal web pages and clients/servers running on Node.js.</p> <p>This library has been developed following the FIWARE NGSI v1, NGSI v2 and the NGSI-LD specifications and has been tested to work against multiple Context Brokers.</p> <h4 id='whyusengsijs'>Why Use NGSI.js?</h4> <p>NGSI.js provides a series of boilerplate library functions allowing developers to connect and push context data to any NGSI compliant context broker, the removes the need to write custom JavaScript code and speeds up development time.</p>",
        domain: 'Data Connector',
        technology: 'Node.js',
        status: 'Full',
        gitHub: 'https://github.com/Ficodes/ngsijs',
        gitHubOrg: 'https://github.com/Ficodes',
        docker: 'https://quay.io/repository/fiware/ngsiproxy',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'STH-Comet',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/telefonica.png',
        company: 'Telefónica',
        companyType: 'S.A.',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/github/license/telefonicaid/fiware-sth-comet.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/telefonicaid/fiware-sth-comet.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/telefonicaid/fiware-sth-comet/latest.svg' alt='' /></p> <h4 id='whatissthcomet'>What is STH Comet?</h4> <p>Short Time Historic (STH) - Comet is a component of the FIWARE ecosystem in charge of managing (storing and retrieving) historical raw and aggregated time series context information about the evolution in time of context data (i.e., entity attribute values) registered in an Orion Context Broker instance.</p> <h4 id='whyusesthcomet'>Why use STH Comet?</h4> <p>The creation and analysis of trend data is a common requirement of context-driven systems - therefore the FIWARE platform offers a generic enabler (STH-Comet) specifically to deal with the issue of persisting and interpreting time series data.</p> <p>Within the FIWARE platform, historical context data can be persisted to a database - this results in a series of data points. Each time-stamped data point represents the state of context entities at a given moment in time. The individual data points are relatively meaningless on their own, it is only through combining a series data points that meaningful statistics such as maxima, minima and trends can be observed.</p>",
        domain: 'Data Connector,Short Term History',
        technology: 'MongoDB',
        status: 'Full',
        gitHub: 'https://github.com/telefonicaid/fiware-sth-comet',
        gitHubOrg: 'https://github.com/telefonicaid/',
        docker: 'https://quay.io/repository/fiware/sth-comet',
        documentation: 'https://fiware-sth-comet.rtfd.io/',
        status: 'Full'
    },
    {
        name: 'Cygnus',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/telefonica.png',
        company: 'Telefónica',
        companyType: 'S.A.',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/github/license/telefonicaid/fiware-cygnus.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/telefonicaid/fiware-cygnus.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/telefonicaid/fiware-cygnus/latest.svg' alt='' /></p> <h4 id='whatiscygnus'>What is Cygnus?</h4> <p>Cygnus is a connector in charge of persisting context data sources into other third-party databases and storage systems, creating a historical view of the context. Internally, Cygnus is based on Apache Flume, <a href='https://flume.apache.org/'>Flume</a> is a data flow system based on the concepts of flow-based programming. It supports powerful and scalable directed graphs of data routing, transformation, and system mediation logic. It was built to automate the flow of data between systems. While the term 'dataflow' can be used in a variety of contexts, we use it here to mean the automated and managed flow of information between systems.</p> <p>Each data persistence agent within Cygnus is composed of three parts - a listener or source in charge of receiving the data, a channel where the source puts the data once it has been transformed into a Flume event, and a sink, which takes Flume events from the channel in order to persist the data within its body into a third-party storage.</p> <h4 id='whyusecygnus'>Why Use Cygnus?</h4> <p>Persisting historical context data is useful for big data analysis - it can be used to discover trends, or data can be sampled and aggregated to remove the influence of outlying data measurements. However within each Smart Solution, the significance of each entity type will differ and entities and attributes may need to be sampled at different rates.</p> <p>Since the business requirements for using context data differ from application to application, no single standard use case for historical data persistence exists. Therefore rather than overloading the context broker with the job of historical context data persistence, this role has been separated out into a separate, highly configurable component - Cygnus.</p> <p>Cygnus plays the role of a connector between the Orion Context Broker (which is an <a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI</a> source of data) and a wide range of external systems such as <a href='https://www.mysql.com/'>MySQL</a>, <a href='https://www.mongodb.org/'>MongoDB</a> etc. You should use Cygnus if you need to process and persist context data so that you can keep a historical record. Cygnus can also be used the filter and repost context data back into Orion.</p>",
        domain: 'Data Connector,Data Persistence',
        technology: 'HDFS,MySQL,CKAN,MongoDB,Kafka,DynamoDB,PostgreSQL,Carto,Elasticsearch,Arcgis',
        status: 'Full',
        gitHub: 'https://github.com/telefonicaid/fiware-cygnus',
        gitHubOrg: 'https://github.com/telefonicaid/',
        docker: 'https://quay.io/repository/fiware/cygnus-ngsi',
        documentation: 'https://fiware-cygnus.rtfd.io/',
        status: 'Full'
    },
    {
        name: 'Draco',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/university-politecnica-of-madrid.png',
        company: 'UPM',
        companyType: '',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/github/license/ging/fiware-draco.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/ging/fiware-draco.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/ging/fiware-draco/latest.svg' alt='' /></p> <h4 id='whatisdraco'>What is Draco?</h4> <p>Draco is a connector in charge of persisting context data sources into other third-party databases and storage systems, creating a historical view of the context. Internally, Draco is based on Apache NiFi. <a href='https://nifi.apache.org'>NiFi</a> is a popular framework for data management and processing from multiple sources.</p> <p>Draco plays the role of a connector between the Orion Context Broker (which is an <a href='https://swagger.lab.fiware.org/?url=https://raw.githubusercontent.com/Fiware/specifications/master/OpenAPI/ngsiv2/ngsiv2-openapi.json'>NGSI</a> source of data) source of data) and a wide range of external systems such as MySQL, MongoDB etc. You can use Draco if you need to process and persist context data so that you can keep a historical record. Draco can also be used to filter and repost context data back into Orion.</p> <h4 id='whyusedraco'>Why Use Draco?</h4> <p>Persisting historical context data is useful for big data analysis - it can be used to discover trends, or data can be sampled and aggregated to remove the influence of outlying data measurements. However within each Smart Solution, the significance of each entity type will differ and entities and attributes may need to be sampled at different rates.</p> <p>Since the business requirements for using context data differ from application to application, no single standard use case for historical data persistence exists. Therefore rather than overloading the context broker with the job of historical context data persistence, this role has been separated out into another enabler. Amongst the advantages of the component, Draco offers a flexible graphical interface so it is possible to amend your data flows according to your current business needs.</p>",
        domain: 'Data Connector,Data Persistence',
        technology: 'MongoDB,MySQL,PostgreSQL,CKAN,Carto,Cassandra,HDFS',
        status: 'Full',
        gitHub: 'https://github.com/ging/fiware-draco',
        gitHubOrg: 'https://github.com/ging',
        docker: 'https://quay.io/repository/fiware/draco',
        documentation: 'https://fiware-draco.rtfd.io/',
        status: 'Full'
    },
    {
        name: 'Cosmos Flink',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/university-politecnica-of-madrid.png',
        company: 'UPM',
        companyType: '',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/github/license/ging/fiware-cosmos-orion-flink-connector.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/ging/fiware-cosmos-orion-flink-connector.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/ging/fiware-cosmos-orion-flink-connector/latest.svg' alt='' /></p> <h4 id='whatiscosmosflink'>What is Cosmos Flink?</h4> <p>The Cosmos Big Data Analysis GE is a set of tools that help achieving the tasks of Streaming and Batch processing over context data. These tools are:</p> <h5 id='flink'>Flink</h5> <ul> <li><a href='https://github.com/ging/fiware-cosmos-orion-flink-connector'>Orion-Flink Connector</a></li> <li><a href='https://flink.apache.org/'>Apache Flink Processing Engine</a></li> </ul> <h4 id='whyusecosmos'>Why use Cosmos?</h4> <p>As the state of the real world changes, the entities representing your IoT devices are constantly changing. Big data analysis allows for the study of datasets coming from your context data which are too large for traditional data-processing software. You can apply predictive analysis or user behaviour analytics to extract meaningful conclusions as to the state of your smart solution and bring value to your solution.</p>",
        domain: 'Big Data',
        technology: 'Apache Flink',
        status: 'Full',
        gitHub: 'https://github.com/ging/fiware-cosmos-orion-flink-connector/',
        gitHubOrg: 'https://github.com/ging/',
        docker: '',
        documentation: 'https://fiware-cosmos-flink.readthedocs.io/',
        status: 'Full'
    },
    {
        name: 'Cosmos Spark',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/university-politecnica-of-madrid.png',
        company: 'UPM',
        companyType: '',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/github/license/ging/fiware-cosmos-orion-spark-connector.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/ging/fiware-cosmos-orion-spark-connector.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/ging/fiware-cosmos-orion-flink-connector/latest.svg' alt='' /></p> <h4 id='whatiscosmosspark'>What is Cosmos Spark?</h4> <p>The Cosmos Big Data Analysis GE is a set of tools that help achieving the tasks of Streaming and Batch processing over context data. These tools are:</p> <ul> <li><a href='https://github.com/ging/fiware-cosmos-orion-spark-connector'>Orion-Spark Connector</a></li> <li><a href='https://spark.apache.org/'>Apache Spark Processing Engine</a></li> </ul> <h4 id='whyusecosmos'>Why use Cosmos?</h4> <p>As the state of the real world changes, the entities representing your IoT devices are constantly changing. Big data analysis allows for the study of datasets coming from your context data which are too large for traditional data-processing software. You can apply predictive analysis or user behaviour analytics to extract meaningful conclusions as to the state of your smart solution and bring value to your solution.</p>",
        domain: 'Big Data',
        technology: 'Apache Spark',
        status: 'Full',
        gitHub: 'https://github.com/ging/fiware-cosmos-orion-spark-connector',
        gitHubOrg: 'https://github.com/ging/',
        docker: '',
        documentation: 'https://fiware-cosmos-spark.readthedocs.io/',
        status: 'Full'
    },
    {
        name: 'QuantumLeap',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/martel-innovate.png',
        company: 'Martel Innovate',
        companyType: '',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/github/license/orchestracities/ngsi-timeseries-api.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/orchestracities/ngsi-timeseries-api.svg' alt='' /> <img src='https://img.shields.io/github/last-commit/orchestracities/ngsi-timeseries-api.svg' alt='' /></p> <h4 id='whatisquantumleap'>What is QuantumLeap?</h4> <p>The QuantumLeap Generic Enabler focuses on persisting historical context data into <a href='https://en.wikipedia.org/wiki/Time_series_database'>time-series databases</a> such as <a href='https://crate.io/'>CrateDB</a> with reference to maintaining a scalable architecture and compatibility with visualization tools such as <a href='http://www.grafana.com/'>Grafana</a></p> <h4 id='whyusequantumleap'>Why use QuantumLeap?</h4> <p>The appropriate use of time series data analysis will depend on your use case and the reliability of the data measurements you receive. Time series data analysis can be used to answer questions such as:</p> <ul> <li>What was the maximum measurement of a device within a given time period?</li> <li>What was the average measurement of a device within a given time period?</li> <li>What was the sum of the measurements sent by a device within a given time period?</li> </ul> <p>QuantumLeap offers great flexibility in measuring and monitoring time-series data and leverages existing time-series-based databases to be able to support complex queries such as cross-entity queries (e.g. an average of averages)</p>",
        domain: 'Data Connector,Short Term History',
        technology: 'CrateDB,Timescale',
        status: 'Full',
        gitHub: 'https://github.com/smartsdk/ngsi-timeseries-api',
        gitHubOrg: 'https://github.com/smartsdk',
        docker: 'https://quay.io/repository/fiware/quantumleap',
        documentation: 'https://quantumleap.rtfd.io/',
        status: 'Full'
    },
    {
        name: 'PySpark Connector',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/engineering.png',
        company: 'Engineering',
        companyType: 'S.p.A.',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/github/license/Engineering-Research-and-Development/fiware-orion-pyspark-connector.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/Engineering-Research-and-Development/fiware-orion-pyspark-connector.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/Engineering-Research-and-Development/fiware-orion-pyspark-connector/latest.svg' alt='' /></p> <h4 id='whatisthepysparkconnector'>What is the PySpark Connector?</h4> <p>The PySpark Connector is a FIWARE Generic Enabler (GE) made of a receiver and a replier subcomponents allowing a bidirectional communication between the NGSI-v2 and NGSI-LD Context Brokers and PySpark. The component works on a low-level socket communication implementing a message passing interface between the two aforementioned counterparts. This interface is equipped with a parser function, permitting the creation of both NGSI-v2 and NGSI-LD entities ready to use in a custom PySpark algorithm. Once data are preprocessed inside the PySpark evnironment, the component also provide a write-back interface (via REST API) to the context broker</p> <h4 id='whyusethepysparkconnector'>Why use the PySpark Connector?</h4> <p>The PySpark Connector was created with the idea of expanding the use of compliant context brokers to merge with the Python environment. Python is currently one of the most used programming languages for data analysis, providing lots of scientific libraries for data processing and visualization. This connector is able to open a communication path between these two instruments and to combine the advantages they provide at a minimal development cost.</p>",
        domain: 'Big Data',
        technology: 'PySpark',
        status: 'Incubating',
        gitHub: 'https://github.com/Engineering-Research-and-Development/fiware-orion-pyspark-connector',
        gitHubOrg: 'https://github.com/Engineering-Research-and-Development',
        docker: 'https://hub.docker.com/r/rdlabengpa/fiware-orion-pyspark-connector',
        documentation: 'https://fiware-orion-pyspark-connector.readthedocs.io/',
        status: 'Incubating'
    },
    {
        name: 'Canis Major',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'FIWARE Foundation',
        companyType: 'e.V.',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/github/license/FIWARE/CanisMajor.svg' alt='License' /> <img src='https://img.shields.io/github/last-commit/FIWARE/CanisMajor.svg' alt='' /> <img src='https://img.shields.io/github/tag/FIWARE/CanisMajor.svg' alt='' /></p> <h4 id='whatiscanismajor'>What is Canis Major?</h4> <p>Canis Major is a blockchain adaptor that supports various DLT, the adaptor aims to submit the data to DLT in Powered By FIWARE Architecture. The adaptor will not be recommended to work for public-permissionless blockchains (especially tokens, cryptocurrencies).</p> <p>Canis Major is developed using NodeJS and supports the transaction to IOTA or ethereum clients such as hyplerledger besu, quorum either using own smart contract or using <a href='https://github.com/FIWARE-Blockchain/AEIContract'>AEI Contract</a> which is based on ERC721 Non-fungible tokens (recommended).</p> <h4 id='whyusecanismajor'>Why use Canis Major?</h4> <p>For some elements of context, it is important to maintain a log of transactions that is verifiable and unchangeable. The use of distributed ledgers helps with this and provides a mechanism for persisting context events. Canis Major can act as a pluggable micro-service that will create, sign and submit the transactions and also keeps the logs of transaction receipts which can be queried using restful APIs.</p> <p>Canis Major aims to make the integration of DLT's easier in 'Powered By FIWARE' architectures.</p>",
        domain: 'Data Persistence',
        technology: 'Blockchain',
        status: 'Incubating',
        gitHub: 'https://github.com/FIWARE/CanisMajor',
        gitHubOrg: 'https://github.com/FIWARE/',
        docker: 'https://quay.io/repository/fiware/canis-major',
        documentation: 'https://fiware.github.io/CanisMajor/',
        status: 'Incubating'
    },
    {
        name: 'Apollo',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'FIWARE Foundation',
        companyType: 'e.V.',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/github/license/FIWARE/apollo.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/FIWARE/apollo.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/FIWARE/apollo/latest.svg' alt='' /></p> <h4 id='whatisfiwareapollo'>What is FIWARE Apollo?</h4> <p>In order to allow an NGSI-LD broker to receive data sent through subscriptions by another broker, Apollo translates notifications  into entity creation or update requests at the NGSI-LD API. For every entity received in the data-part of a notification, the proxy  first tries a POST <code>/entities/{entityId}/attrs/</code> to update(and overwrite the properties) the entity. If <strong>404 - NOT FOUND</strong> is returned  by the broker, the proxy will try to create the entity via POST <code>/entities</code>.</p> <h4 id='whyusethefiwareapollo'>Why use the FIWARE Apollo?</h4> <p>Within data spaces it may be necessary to duplicate entity information across multiple brokers. For example, a receiving broker may use the raw data provided via a subscription, process it to add value and then offer additional insights on that data. By  using a <em>subscribe-and-duplicate</em> mechanism, the data is automatically generated within a protected context broker and  it is possible to permit access via a known protected data entrypoint which then adds data to a context broker.</p>",
        domain: 'Data Persistence',
        technology: 'HTTP',
        status: 'Incubating',
        gitHub: 'https://github.com/FIWARE/apollo',
        gitHubOrg: 'https://github.com/FIWARE/',
        docker: 'https://quay.io/repository/fiware/apollo',
        documentation: 'https://github.com/FIWARE/apollo/README.md',
        status: 'Incubating'
    },
    {
        name: 'O2K Connector',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/engineering.png',
        company: 'Engineering',
        companyType: 'S.p.A.',
        type: 'Core Context',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Core.svg'/>",
        chapter: 'core',
        content:
            "<p><img src='https://img.shields.io/github/license/Engineering-Research-and-Development/o2k-connector.svg' alt='License' /> <img src='https://img.shields.io/github/release-date/Engineering-Research-and-Development/o2k-connector.svg' alt='' /> <img src='https://img.shields.io/github/commits-since/Engineering-Research-and-Development/o2k-connector/latest.svg' alt='' /></p> <h4 id='whatistheo2kconnector'>What is the O2K-Connector?</h4> <p>O2K-Connector is a lightweight connector, written in Python, that enables context data sharing from Orion Context Broker  towards Apache Kafka, supporting both NGSI-V2 and NGSI-LD interfaces. The connector supports both HTTP and MQTT protocols  communication to be easily integrated in the most common industrial scenarios.</p> <h4 id='whyusetheo2kconnector'>Why use the O2K-Connector?</h4> <p>Using O2K-Connector offers several benefits. Firstly, it simplifies the integration process between FIWARE and Apache  technologies by providing an  efficient solution for data forwarding, eliminating the need for complex and time-consuming  custom integration efforts. Secondly, O2K-Connector ensures reliable and scalable data transfer, allowing for real-time  processing and analysis of data in Apache Kafka by supporting the faster and lighter MQTT  Orion subscription.</p>",
        domain: '',
        technology: 'Kafka',
        status: 'Incubating',
        gitHub: 'https://github.com/Engineering-Research-and-Development/o2k-connector',
        gitHubOrg: 'https://github.com/Engineering-Research-and-Development',
        docker: '',
        documentation:
            'https://github.com/FIWARE/catalogue/blob/master/core/Engineering-Research-and-Development/o2k-connector/README.md',
        status: 'Incubating'
    },
    {
        name: 'IoT Agent for JSON',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/telefonica.png',
        company: 'Telefónica',
        companyType: 'S.A.',
        type: 'IoT Agents',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_IOTAgents.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'IoT Devices',
        technology: 'HTTP,AMPQ,MQTT',
        status: 'Full',
        gitHub: 'https://github.com/telefonicaid/iotagent-json',
        gitHubOrg: 'https://github.com/telefonicaid/',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'IoT Agent for LWM2M',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/telefonica.png',
        company: 'Telefónica',
        companyType: 'S.A.',
        type: 'IoT Agents',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_IOTAgents.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'IoT Devices',
        technology: 'LWM2M,CoAP',
        status: 'Full',
        gitHub: 'https://github.com/telefonicaid/lightweightm2m-iotagent',
        gitHubOrg: 'https://github.com/telefonicaid/',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'IoT Agent for Ultralight',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/telefonica.png',
        company: 'Telefónica',
        companyType: 'S.A.',
        type: 'IoT Agents',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_IOTAgents.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'IoT Devices',
        technology: 'HTTP,AMPQ,MQTT',
        status: 'Full',
        gitHub: 'https://github.com/telefonicaid/iotagent-ul',
        gitHubOrg: 'https://github.com/telefonicaid/',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'IoT Agent for LoRaWAN',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/telefonica.png',
        company: 'Telefónica',
        companyType: 'S.A.',
        type: 'IoT Agents',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_IOTAgents.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'IoT Devices',
        technology: 'LoRa',
        status: 'Full',
        gitHub: 'https://github.com/Atos-Research-and-Innovation/IoTagent-LoRaWAN',
        gitHubOrg: 'https://github.com/telefonicaid/',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'IoT Agent for OPC-UA',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/engineering.png',
        company: 'Engineering',
        companyType: 'S.p.A.',
        type: 'Robotics',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Robotics.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'IoT Devices',
        technology: 'OPC-UA',
        status: 'Full',
        gitHub: 'https://github.com/Engineering-Research-and-Development/iotagent-opcua',
        gitHubOrg: 'https://github.com/Engineering-Research-and-Development',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'IoT Agent for Sigfox',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/telefonica.png',
        company: 'Telefónica',
        companyType: 'S.A.',
        type: 'IoT Agents',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_IOTAgents.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'IoT Devices',
        technology: 'SigFox',
        status: 'Full',
        gitHub: 'https://github.com/telefonicaid/sigfox-iotagent',
        gitHubOrg: 'https://github.com/telefonicaid/',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'IoT Agent for ISOXML',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'FIWARE Foundation',
        companyType: 'e.V.',
        type: 'IoT Agents',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_IOTAgents.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'IoT Devices',
        technology: 'HTTP',
        status: 'Incubating',
        gitHub: 'https://github.com/FIWARE/iotagent-isoxml',
        gitHubOrg: 'https://github.com/FIWARE/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'IoT Agent library',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/telefonica.png',
        company: 'Telefónica',
        companyType: 'S.A.',
        type: 'IoT Agents',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_IOTAgents.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'IoT Devices',
        technology: 'Node.js',
        status: 'Full',
        gitHub: 'https://github.com/telefonicaid/iotagent-node-lib',
        gitHubOrg: 'https://github.com/telefonicaid/',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'Kurento',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/naeva-tec.png',
        company: 'Naevatec',
        companyType: '',
        type: 'Media Streams',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_MediaStreams.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'Media Server',
        technology: 'WebRTC',
        status: 'Full',
        gitHub: 'https://github.com/Kurento/kurento-media-server.',
        gitHubOrg: 'https://github.com/Kurento',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'OpenVidu',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/naeva-tec.png',
        company: 'Naevatec',
        companyType: '',
        type: 'Media Streams',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_MediaStreams.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'Video Filters',
        technology: 'WebRTC',
        status: 'Full',
        gitHub: 'https://github.com/OpenVidu/openvidu',
        gitHubOrg: 'https://github.com/OpenVidu/',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'OpenMTC',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'Fraunhofer FOKUS',
        companyType: '',
        type: 'IoT Agents',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_IOTAgents.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'IoT Devices',
        technology: 'OneM2M',
        status: 'Incubating',
        gitHub: 'https://github.com/OpenMTC/OpenMTC',
        gitHubOrg: 'https://github.com/OpenMTC',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Fast DDS',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/eprosima.png',
        company: 'eProsima',
        companyType: '',
        type: 'Robotics',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Robotics.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'IoT Devices',
        technology: 'ROS2',
        status: 'Incubating',
        gitHub: 'https://github.com/eProsima/Fast-DDS',
        gitHubOrg: 'https://github.com/eProsima',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Micro XRCE-DDS',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/eprosima.png',
        company: 'eProsima',
        companyType: '',
        type: 'Robotics',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Robotics.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'IoT Devices',
        technology: 'DDS',
        status: 'Incubating',
        gitHub: 'https://github.com/eProsima/Micro-XRCE-DDS',
        gitHubOrg: 'https://github.com/eProsima',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'FIROS',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'Fraunhofer IML',
        companyType: '',
        type: 'Robotics',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Robotics.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'IoT Devices',
        technology: 'ROS',
        status: 'Incubating',
        gitHub: 'https://github.com/iml130/firos',
        gitHubOrg: 'https://github.com/iml130',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Domibus',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'European Union',
        companyType: '',
        type: 'Third Party',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_ThirdParty.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'Data Exchange',
        technology: 'eDelivery',
        status: 'Incubating',
        gitHub: 'https://ec.europa.eu/digital-building-blocks/code/scm/edelivery/domibus.git',
        gitHubOrg: 'https://ec.europa.eu/digital-building-blocks',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Oliot',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'KAIST',
        companyType: '',
        type: 'Third Party',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_ThirdParty.svg'/>",
        chapter: 'interface',
        content: '',
        domain: 'Event Processing',
        technology: 'EPCIS',
        status: 'Incubating',
        gitHub: 'https://github.com/yalewkidane/FIWARE_EPCIS_Mediation_Gateway',
        gitHubOrg: 'https://github.com/yalewkidane',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Wirecloud',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/ficodes.png',
        company: 'FICODES',
        companyType: '',
        type: 'Visualisation',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Visualization.svg'/>",
        chapter: 'context-processing',
        content: '',
        domain: 'Mashup',
        technology: 'Node.js',
        status: 'Full',
        gitHub: 'https://github.com/Wirecloud/wirecloud',
        gitHubOrg: 'https://github.com/Ficodes',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'FogFlow',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/nec.png',
        company: 'NEC',
        companyType: 'Corporation',
        type: 'Processing',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_ProcessingAnalysis.svg'/>",
        chapter: 'context-processing',
        content: '',
        domain: 'Cloud-Edge',
        technology: '',
        status: 'Full',
        gitHub: 'https://github.com/smartfog/fogflow',
        gitHubOrg: 'https://github.com/smartfog',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'Perseo',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/telefonica.png',
        company: 'Telefónica',
        companyType: 'S.A.',
        type: 'Processing',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_ProcessingAnalysis.svg'/>",
        chapter: 'context-processing',
        content: '',
        domain: 'Event Processing',
        technology: 'HTTP,eMail,SMS',
        status: 'Incubating',
        gitHub: 'https://github.com/telefonicaid/perseo-fe',
        gitHubOrg: 'https://github.com/telefonicaid/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Keyrock',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/university-politecnica-of-madrid.png',
        company: 'UPM',
        companyType: '',
        type: 'Security',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'/>",
        chapter: 'context-data',
        content: '',
        domain: 'Identity Manager,PDP',
        technology: 'Keyrock',
        status: 'Full',
        gitHub: 'https://github.com/ging/fiware-idm',
        gitHubOrg: 'https://github.com/ging',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'Wilma',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/university-politecnica-of-madrid.png',
        company: 'UPM',
        companyType: '',
        type: 'Security',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'/>",
        chapter: 'context-data',
        content: '',
        domain: 'PEP Proxy',
        technology: 'Keyrock',
        status: 'Full',
        gitHub: 'https://github.com/ging/fiware-pep-proxy',
        gitHubOrg: 'https://github.com/ging',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'AuthZForce',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'Thales',
        companyType: '',
        type: 'Security',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'/>",
        chapter: 'context-data',
        content: '',
        domain: 'PDP',
        technology: 'XACML',
        status: 'Full',
        gitHub: 'https://github.com/authzforce/server',
        gitHubOrg: 'https://github.com/authzforce',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'TRUE Connector',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/engineering.png',
        company: 'Engineering',
        companyType: 'S.p.A.',
        type: 'Security',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'/>",
        chapter: 'context-data',
        content: '',
        domain: 'Data Exchange',
        technology: 'IDS',
        status: 'Incubating',
        gitHub: 'https://github.com/Engineering-Research-and-Development/fiware-true-connector',
        gitHubOrg: 'https://github.com/Engineering-Research-and-Development',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Steelskin',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/telefonica.png',
        company: 'Telefónica',
        companyType: 'S.A.',
        type: 'Security',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'/>",
        chapter: 'context-data',
        content: '',
        domain: 'PEP Proxy',
        technology: '',
        status: 'Incubating',
        gitHub: 'https://github.com/telefonicaid/fiware-pep-steelskin',
        gitHubOrg: 'https://github.com/telefonicaid/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Keypass',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/telefonica.png',
        company: 'Telefónica',
        companyType: 'S.A.',
        type: 'Security',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'/>",
        chapter: 'context-data',
        content: '',
        domain: 'PDP',
        technology: 'XACML',
        status: 'Incubating',
        gitHub: 'https://github.com/telefonicaid/fiware-keypass',
        gitHubOrg: 'https://github.com/telefonicaid/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Keystone SCIM',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/telefonica.png',
        company: 'Telefónica',
        companyType: 'S.A.',
        type: 'Security',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'/>",
        chapter: 'context-data',
        content: '',
        domain: '',
        technology: 'Keystone',
        status: 'Incubating',
        gitHub: 'https://github.com/telefonicaid/fiware-keystone-scim',
        gitHubOrg: 'https://github.com/telefonicaid/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Keystone SPASSWORD',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/telefonica.png',
        company: 'Telefónica',
        companyType: 'S.A.',
        type: 'Security',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'/>",
        chapter: 'context-data',
        content: '',
        domain: '',
        technology: 'Keystone',
        status: 'Incubating',
        gitHub: 'https://github.com/telefonicaid/fiware-keystone-spassword',
        gitHubOrg: 'https://github.com/telefonicaid/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Trusted Issuers List Service',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'FIWARE Foundation',
        companyType: 'e.V.',
        type: 'Security',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'/>",
        chapter: 'context-data',
        content:
            '<p>The Trusted-Issuers-List Service provides an EBSI Trusted Issuers Registry implementation to act as the Trusted-List-Service in the DSBA Trust and IAM Framework. In addition, a Trusted Issuers List API to manage the issuers is provided.</p>',
        domain: 'Data Spaces,Trust',
        technology: '',
        status: 'Incubating',
        gitHub: 'https://github.com/FIWARE/trusted-issuers-list#installation',
        gitHubOrg: 'https://github.com/FIWARE/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'DSBA PDP',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'FIWARE Foundation',
        companyType: 'e.V.',
        type: 'Security',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'/>",
        chapter: 'context-data',
        content:
            '<p>Implementation of a Policy-Desicion Point, evaluating Json-Web-Tokens containing VerifiableCredentials in an DSBA-compliant way. It also supports the evaluation in the context of i4Trust.</p>',
        domain: 'PDP,Data Spaces',
        technology: '',
        status: 'Incubating',
        gitHub: 'https://github.com/FIWARE/dsba-pdp#quick-start',
        gitHubOrg: 'https://github.com/FIWARE/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'VC-Verifier',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'FIWARE Foundation',
        companyType: 'e.V.',
        type: 'Security',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'/>",
        chapter: 'context-data',
        content:
            '<p>VCVerifier provides the necessary endpoints(see API) to offer SIOP-2/OIDC4VP compliant authentication flows. It exchanges VerfiableCredentials for JWT, that can be used for authorization and authentication in down-stream components.</p>',
        domain: 'Data Spaces,Trust',
        technology: '',
        status: 'Incubating',
        gitHub: 'https://github.com/FIWARE/VCVerifier#install',
        gitHubOrg: 'https://github.com/FIWARE/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Keycloak VC-Issuer',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'FIWARE Foundation',
        companyType: 'e.V.',
        type: 'Security',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'/>",
        chapter: 'context-data',
        content:
            '<p>The Keycloak-VC-Issuer is plugin for Keycloak to support SIOP-2/ OIDC4VP clients and issue VerifiableCredentials through the OIDC4VCI-Protocol to compliant wallets.</p>',
        domain: 'Verified Credentials',
        technology: '',
        status: 'Incubating',
        gitHub: 'https://github.com/FIWARE/keycloak-vc-issuer#install',
        gitHubOrg: 'https://github.com/FIWARE/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Credentials Config Service',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'FIWARE Foundation',
        companyType: 'e.V.',
        type: 'Security',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'/>",
        chapter: 'context-data',
        content:
            '<p>The Credentials Config Service manages and provides information about services and the credentials they are using. It returns the scope to be requested from the wallet per service and the credentials and issuers that are considered to be trusted for a certain service.</p>',
        domain: 'Verified Credentials',
        technology: 'Keycloak',
        status: 'Incubating',
        gitHub: 'https://github.com/FIWARE/credentials-config-service#installation',
        gitHubOrg: 'https://github.com/FIWARE/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Trusted Issuers Registry',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'FIWARE Foundation',
        companyType: 'e.V.',
        type: 'Security',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_Security.svg'/>",
        chapter: 'context-data',
        content:
            '<p>The Trusted Issuers Registry provides both an EBSI Trusted Issuers Registry implementation and an iShare implementation. The service provides data from an NGSI-LD compliant backend and configuration files.</p>',
        domain: 'Data Spaces,Trust',
        technology: '',
        status: 'Incubating',
        gitHub: 'https://github.com/FIWARE/trusted-issuers-registry',
        gitHubOrg: 'https://github.com/FIWARE/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'CKAN extensions',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/ficodes.png',
        company: 'FICODES',
        companyType: '',
        type: 'Data Publication',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_DataPublication.svg'/>",
        chapter: 'context-data',
        content: '',
        domain: '',
        technology: 'CKAN',
        status: 'Full',
        gitHub: 'https://github.com/conwetlab/FIWARE-CKAN-Extensions',
        gitHubOrg: 'https://github.com/Ficodes',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'Biz Framework',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/ficodes.png',
        company: 'FICODES',
        companyType: '',
        type: 'Data Monetization',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_DataMonetization.svg'/>",
        chapter: 'context-data',
        content: '',
        domain: '',
        technology: '',
        status: 'Full',
        gitHub: 'https://github.com/FIWARE-TMForum/Business-API-Ecosystem',
        gitHubOrg: 'https://github.com/Ficodes',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'Idra',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/engineering.png',
        company: 'Engineering',
        companyType: 'S.p.A.',
        type: 'Data Publication',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_DataPublication.svg'/>",
        chapter: 'context-data',
        content: '',
        domain: '',
        technology: 'CKAN,DKAN,SOCRATA',
        status: 'Full',
        gitHub: 'https://github.com/OPSILab/Idra',
        gitHubOrg: 'https://github.com/Engineering-Research-and-Development',
        docker: '',
        documentation: '',
        status: 'Full'
    },
    {
        name: 'CoatRack',
        img: 'https://www.fiware.org/wp-content/directories/organisations/images/atb-bremen.png',
        company: 'ATB Bremen',
        companyType: '',
        type: 'API Management',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_APIManagement.svg'/>",
        chapter: 'context-data',
        content: '',
        domain: '',
        technology: '',
        status: 'Incubating',
        gitHub: 'https://github.com/coatrack/coatrack',
        gitHubOrg: 'https://github.com/coatrack/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Endpoint-Auth-Service',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'FIWARE Foundation',
        companyType: 'e.V.',
        type: 'API Management',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_APIManagement.svg'/>",
        chapter: 'context-data',
        content: '',
        domain: '',
        technology: '',
        status: 'Incubating',
        gitHub: 'https://github.com/FIWARE/endpoint-auth-service',
        gitHubOrg: 'https://github.com/FIWARE/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    },
    {
        name: 'Kong Plugins',
        img: 'https://www.fiware.org/wp-content/directories/enablers/images/webinar-default.png',
        company: 'FIWARE Foundation',
        companyType: 'e.V.',
        type: 'API Management',
        badge: "<img src='https://www.fiware.org/style/imgs/Badges/Badge_FIWARE_APIManagement.svg'/>",
        chapter: 'context-data',
        content: '',
        domain: '',
        technology: 'Keycloak,Keyrock',
        status: 'Incubating',
        gitHub: 'https://github.com/FIWARE/kong-plugins-fiware',
        gitHubOrg: 'https://github.com/FIWARE/',
        docker: '',
        documentation: '',
        status: 'Incubating'
    }
];
